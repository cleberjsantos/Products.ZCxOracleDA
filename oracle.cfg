[buildout]
parts +=
    python-oracle-instantclient
    python-oracle-instantclient-sdk
    python-oracle-setup
    python-oracle-autoenv
    python-oracle-cxoracle

[settings]
python-oracle-base-url = http://www.hpc.jcu.edu.au/plone/oracle

[python-oracle-environment]
vars =
    CFLAGS -m32
    DYLD_LIBRARY_PATH ${python-oracle-env:destination}
    LD_LIBRARY_PATH ${python-oracle-env:destination}
    TNS_ADMIN ${python-oracle-env:destination}
    ORACLE_HOME ${python-oracle-env:destination}
initialization =
    import os
    vars = """${:vars}"""
    os.environ.update(dict(line.split() for line in vars.strip().split('\n')))

#Declared for use in compiling the Oracle connector egg
[python-oracle-env]
destination = ${buildout:parts-directory}/python-oracle
ORACLE_HOME = ${:destination}

#Autoenv creator for environment variables
[python-oracle-autoenv]
recipe = collective.recipe.template
input = inline:
    export LD_LIBRARY_PATH=${python-oracle-env:destination}
    export DYLD_LIBRARY_PATH=${python-oracle-env:destination}
    export CFLAGS=-m32
    export TNS_ADMIN=${python-oracle-env:destination}
    export ORACLE_HOME=${python-oracle-env:destination}
output = ${buildout:directory}/.env

#Setup and library downloads
[python-oracle-urls]
recipe = mr.scripty
is_64bit = 
    ... import platform
    ... return any(['64' in x for x in platform.architecture()])
instantclient_url =
    ... return self.INSTANTCLIENT_URL_32
instantclient_sdk_url = 
    ... return self.INSTANTCLIENT_SDK_URL_32

INSTANTCLIENT_URL_64 = ${settings:python-oracle-base-url}/instantclient-basiclite-linux-x86-64-11.2.0.2.0.zip
INSTANTCLIENT_URL_32 = ${settings:python-oracle-base-url}/instantclient-basiclite-linux32-11.2.0.1.zip
INSTANTCLIENT_SDK_URL_64 = ${settings:python-oracle-base-url}/instantclient-sdk-linux-x86-64-11.2.0.2.0.zip
INSTANTCLIENT_SDK_URL_32 = ${settings:python-oracle-base-url}/instantclient-sdk-linux32-11.2.0.1.zip

[python-oracle-instantclient]
recipe = hexagonit.recipe.download
url = ${python-oracle-urls:instantclient_url}
destination = ${python-oracle-env:destination}
strip-top-level-dir = true
ignore-existing = true

[python-oracle-instantclient-sdk]
recipe = hexagonit.recipe.download
url = ${python-oracle-urls:instantclient_sdk_url}
destination = ${python-oracle-env:destination}
strip-top-level-dir = true
ignore-existing = true

[python-oracle-setup]
recipe = plone.recipe.command
library-path = ${python-oracle-env:destination}/libclntsh.so
command = ln -s ${:library-path}* ${:library-path}
update-command = ${:command}

[oracle-environment]
CFLAGS = -m32
ORACLE_HOME = ${python-oracle-env:ORACLE_HOME}
DYLD_LIBRARY_PATH = ${python-oracle-env:ORACLE_HOME}
LD_LIBRARY_PATH = ${python-oracle-env:ORACLE_HOME}
TNS_ADMIN = ${python-oracle-env:ORACLE_HOME}

[python-oracle-cxoracle]
recipe = zc.recipe.egg:custom
environment = oracle-environment
egg = cx_Oracle
